import re, time, pandas as pd, requests
from io import StringIO

FILES = [
    ("womens_swimming.csv",   "Women's Swimming With Heights"),
    ("mens_swimming.csv",     "Men's Swimming With Heights"),
    ("mens_volleyball.csv",   "Men's Volleyball With Heights"),
    ("womens_volleyball.csv", "Women's Volleyball With Heights"),
]

UA = {"User-Agent":"Mozilla/5.0"}
PAUSE = 1.0

def to_inches(s):
    if pd.isna(s): return pd.NA
    s = str(s).strip().replace("’","'").replace("″",'"').replace("–","-").replace("—","-")
    m = re.match(r"^\s*(\d+(?:\.\d+)?)\s*cm\s*$", s, re.I)
    if m: return float(m.group(1))/2.54
    if re.match(r"^\d+(\.\d+)?$", s): 
        v = float(s); return v/2.54 if v>=100 else v
    m = re.match(r"^\s*(\d+)\s*['-]?\s*(\d+)\s*(\"|in|$)", s, re.I)
    if m: return float(m.group(1))*12 + float(m.group(2))
    m = re.match(r"^\s*(\d+)\s*(?:ft|feet)\s*(\d+)\s*(?:in|inches)\s*$", s, re.I)
    if m: return float(m.group(1))*12 + float(m.group(2))
    return pd.NA

def avg_from_roster_list(csv_path):
    """Reads School/Roster CSV, visits each roster page, grabs a table that has Height (or Ht)."""
    base = pd.read_csv(csv_path)
    all_in = []
    for url in base["Roster"]:
        try:
            html = requests.get(url, headers=UA, timeout=20).text
          
            for t in pd.read_html(StringIO(html)):
                hcols = [c for c in t.columns if ("height" in str(c).lower()) or str(c).lower() in ("ht","ht.")]
                if not hcols: 
                    continue
                h = pd.to_numeric(t[hcols[0]].map(to_inches), errors="coerce")
                h = h[h.between(55,85)]
                if len(h):
                    all_in.extend(h.tolist())
                    break
            time.sleep(PAUSE)
        except Exception:
            pass
    return (round(pd.Series(all_in).mean(),2), len(all_in)) if all_in else (None,0)

print("Q5 Averages:")
for src, label in FILES:
    avg, n = avg_from_roster_list(src)
    print(f"{label}: average in = {avg} (n={n})") 
